- name: Create {{ patroni.cfg_dir }} directory
  file:
    state: directory
    path: "{{ patroni.cfg_dir }}"
    owner: "{{ patroni.user }}"
    group: "{{ patroni.group }}"
    mode: 0750
  become: yes

- name: Create {{ patroni.raft_dir }} directory
  file:
    state: directory
    path: "{{ patroni.raft_dir }}"
    owner: "{{ patroni.user }}"
    group: "{{ patroni.group }}"
    mode: 0750
  become: yes

- name: Deploy {{ patroni.cfg_dir }}/config.yml template
  template:
    src: config.yml.j2
    dest: "{{ patroni.cfg_dir }}/config.yml"
    owner: "{{ patroni.user }}"
    group: "{{ patroni.group }}"
    mode: 0640
  become: yes

- name: Start postgres in case it was stopped by hand
  command: pg_ctlcluster {{ postgres.version }} main start
  become: yes
  become_user: postgres
  ignore_errors: yes  # Might already be running

- name: Create patroni superuser
  community.general.postgresql_user:
    db: postgres
    name: patroni
    password: "{{ password.patroni }}"
    priv: "ALL"
    role_attr_flags: SUPERUSER
    expires: infinity
  become: yes
  become_user: postgres
  when: patroni_leader

- name: Create replication user
  community.general.postgresql_user:
    db: postgres
    name: replicator
    password: "{{ password.replicator }}"
    priv: "ALL"
    role_attr_flags: REPLICATION
    expires: infinity
  become: yes
  become_user: postgres
  when: patroni_leader

- name: Add patroni to pg_hba.conf (this hosts)
  community.general.postgresql_pg_hba:
    dest: "{{ postgres.config_dir }}/pg_hba.conf"
    contype: host
    users: patroni
    source: "{{ item }}"
    databases: postgres
    method: md5
    create: true
  with_items:
    - 127.0.0.1/32
    - "{{ ansible_default_ipv4.address }}/32"
  become: yes
  become_user: postgres
  when: patroni_leader

- name: Add patroni to pg_hba.conf (group hosts)
  community.general.postgresql_pg_hba:
    dest: "{{ postgres.config_dir }}/pg_hba.conf"
    contype: host
    users: patroni
    source: "{{ hostvars[item]['ansible_default_ipv4']['address'] }}"
    databases: postgres
    method: md5
    create: true
  with_items:
    - "{{ groups['db'] }}"
  become: yes
  become_user: postgres
  when: patroni_leader

- name: Add replicator to pg_hba.conf (this host)
  community.general.postgresql_pg_hba:
    dest: "{{ postgres.config_dir }}/pg_hba.conf"
    contype: host
    users: replicator
    source: "{{ item }}"
    databases: postgres
    method: md5
    create: true
  with_items:
    - 127.0.0.1/32
    - "{{ ansible_default_ipv4.address }}/32"
  become: yes
  become_user: postgres
  when: patroni_leader

- name: Add replicator to pg_hba.conf (group hosts)
  community.general.postgresql_pg_hba:
    dest: "{{ postgres.config_dir }}/pg_hba.conf"
    contype: host
    users: replicator
    source: "{{ hostvars[item]['ansible_default_ipv4']['address'] }}"
    databases: postgres
    method: md5
    create: true
  with_items:
    - "{{ groups['db'] }}"
  become: yes
  become_user: postgres
  when: patroni_leader

- name: Create {{ postgres.config_dir }}/conf.d directory
  file:
    state: directory
    path: "{{ postgres.config_dir }}/conf.d"
    owner: "{{ postgres.user }}"
    group: "{{ postgres.group }}"
    mode: 0750
  become: yes
  when: not patroni_leader

- name: Create {{ postgres.run_dir }}/{{ postgres.version }}-main.pg_stat_tmp directory
  file:
    state: directory
    path: "{{ postgres.run_dir }}/{{ postgres.version }}-main.pg_stat_tmp"
    owner: "{{ postgres.user }}"
    group: "{{ postgres.group }}"
    mode: '2750'
  become: yes
  when: not patroni_leader

- name: Disable postgresql (patroni handles it)
  systemd:
    name: postgresql
    state: stopped
    enabled: no
  become: yes

- name: Stop postgres in case it was started by hand
  command: pg_ctlcluster {{ postgres.version }} main stop
  become: yes
  become_user: postgres
  ignore_errors: yes  # Might already not be running

# - name: Ensure {{ pg_run_time_dir }}/{{ pg_version }}-main.pg_stat_tmp directory
#   file:
#     state: directory
#     path: "{{ pg_run_time_dir }}/{{ pg_version }}-main.pg_stat_tmp"
#     owner: postgres
#     group: postgres
#     mode: '2750'
#   become: yes
